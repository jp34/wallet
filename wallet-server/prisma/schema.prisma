// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
	provider = "prisma-client-js"
}

datasource db {
	provider = "postgresql"
	url      = env("DATABASE_URL")
}

model User {
	id          	Int     	@id @default(autoincrement())
	email       	String  	@unique
	ensAddress  	String?  	@unique
	password		String
	earning			Boolean		@default(false)
	agreement		Boolean		@default(false)
	patient     	Patient?
	products		Product[]
	created			DateTime	@default(now())
	modified		DateTime	@default(now())
}

model Patient {
	id				Int						@id @unique
	user			User					@relation(fields: [id], references: [id])
	firstName		String
	middleName		String
	lastName		String
	phone			String					@default("")
	birthday		String
	medications		PatientMedication[]
	allergies		PatientAllergy[]
	encounters		MedicalEncounter[]
	created			DateTime				@default(now())
	modified		DateTime				@default(now())
}

model PatientMedication {
	patient			Patient		@relation(fields: [patientId], references: [id])
	patientId		Int
	name			String
	dosage			String
	frequency		String
	date			String
	created			DateTime	@default(now())
	modified		DateTime	@default(now())
	@@id([patientId, name])
}

model PatientAllergy {
	patient			Patient		@relation(fields: [patientId], references: [id])
	patientId		Int
	name			String
	severity		String
	created			DateTime	@default(now())
	modified		DateTime	@default(now())
	@@id([patientId, name])
}

model MedicalEncounter {
	patient			Patient		@relation(fields: [patientId], references: [id])
	patientId		Int
	provider		String
	reason			String
	created			DateTime	@default(now())
	modified		DateTime	@default(now())
	@@id([patientId, reason])
}

model Product {
	id				Int			@id @default(autoincrement())
	cid				String		@unique
	subject			User		@relation(fields: [subjectId], references: [id])
	subjectId		Int
	voucher			String
	buyerAddress	String?
	price			Float		@default(50.0)
	sold			Boolean		@default(false)
	created			DateTime	@default(now())
	modified		DateTime	@default(now())
}

model Payment {
	id				Int			@id @default(autoincrement())
	subject			Int
	amount			Float
	paid			Boolean		@default(false)
	created			DateTime	@default(now())
	modified		DateTime	@default(now())
}
